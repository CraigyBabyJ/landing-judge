name: Windows PyInstaller Build

on:
  workflow_dispatch:
    inputs:
      console:
        description: Include console window (true/false)
        required: false
        default: 'false'
  push:
    tags:
      - 'v*'
    branches:
      - main
    paths:
      - 'main.py'
      - 'requirements.txt'
      - 'static/**'
      - 'templates/**'
      - 'LandingJudge.spec'
      - '.github/workflows/windows-pyinstaller.yml'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install pillow

      - name: Generate .ico from PNG (if present)
        shell: bash
        run: |
          mkdir -p build
          if [ -f "static/icons/icon.png" ]; then
            python -c "import os; from PIL import Image; png='static/icons/icon.png'; ico='build/icon.ico'; os.makedirs(os.path.dirname(ico), exist_ok=True); im=Image.open(png).convert('RGBA'); sizes=[(16,16),(32,32),(48,48),(64,64),(128,128),(256,256)]; im.save(ico, sizes=sizes, format='ICO'); print('Icon generated at '+ico)"
          else
            echo "No PNG icon at static/icons/icon.png; skipping ICO generation."
          fi

      - name: Select console mode
        shell: bash
        run: |
          CONSOLE="${{ github.event.inputs.console }}"
          if [ -z "$CONSOLE" ]; then CONSOLE="false"; fi
          echo "CONSOLE=$CONSOLE" >> "$GITHUB_ENV"

      - name: Build executable (PyInstaller)
        shell: bash
        run: |
          MODE_FLAG="--onedir"
          # Console toggle (default false -> --noconsole)
          if [ "$CONSOLE" = "true" ] || [ "$CONSOLE" = "1" ]; then CONSOLE_FLAG="--console"; else CONSOLE_FLAG="--noconsole"; fi
          ICON_FLAG=""
          if [ -f "build/icon.ico" ]; then ICON_FLAG="--icon build/icon.ico"; fi
          python -m PyInstaller --noconfirm "$MODE_FLAG" $CONSOLE_FLAG $ICON_FLAG \
            --name LandingJudge \
            --add-data "static;static" \
            --add-data "templates;templates" \
            --hidden-import markupsafe._speedups \
            main.py

      - name: Package onedir build as zip (Release)
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        run: |
          $zipPath = "dist/LandingJudge-${{ github.ref_name }}-onedir.zip"
          Compress-Archive -Path 'dist/LandingJudge/*' -DestinationPath $zipPath -Force
          Write-Host "Packaged onedir build -> $zipPath"

      - name: Publish GitHub Release (onedir)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/LandingJudge-${{ github.ref_name }}-onedir.zip
          draft: false
          generate_release_notes: true


      - name: Upload artifact (onedir)
        uses: actions/upload-artifact@v4
        with:
          name: LandingJudge-${{ github.sha }}-onedir
          path: dist/LandingJudge/