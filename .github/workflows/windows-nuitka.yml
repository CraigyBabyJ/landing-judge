name: Build Windows EXE (Nuitka + UPX)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ 'v*', 'V*' ]

permissions:
  contents: write

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip and install build deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -r requirements.txt
          python -m pip install nuitka zstandard

      - name: Install UPX
        shell: pwsh
        run: |
          choco install upx -y

      - name: Build EXE with Nuitka (onefile)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          mkdir dist 2>$null
          python -m nuitka `
            --onefile `
            --standalone `
            --enable-plugin=pyside6 `
            --assume-yes-for-downloads `
            --mingw64 `
            --windows-console-mode=disable `
            --include-data-dir=static=static `
            --include-data-dir=templates=templates `
            --include-data-files=quotes.json=quotes.json `
            --include-data-files=quotes.default.json=quotes.default.json `
            --output-dir=dist `
            all_in_one.py

      - name: Compress EXE with UPX
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Continue'
          $exe = Join-Path "dist" "all_in_one.exe"
          if (Test-Path $exe) {
            # Try UPX compression; if the file is not compressible, continue without failing the job.
            upx --best --lzma "$exe"
            if ($LASTEXITCODE -ne 0) {
              Write-Host "UPX could not compress (ExitCode=$LASTEXITCODE). Keeping original EXE."
              # Prevent step failure due to UPX returning non-zero
              $LASTEXITCODE = 0
            }
          } else {
            Write-Host "Executable not found at $exe"; exit 1
          }

      - name: Zip distribution
        shell: pwsh
        run: |
          $zip = "landing-judge-windows.zip"
          if (Test-Path dist) {
            Compress-Archive -Path dist\* -DestinationPath $zip -Force
          } else {
            Write-Host "dist folder missing"; exit 1
          }
          Write-Host "Created $zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: landing-judge-windows
          path: landing-judge-windows.zip

      - name: Publish GitHub Release asset (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            landing-judge-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}